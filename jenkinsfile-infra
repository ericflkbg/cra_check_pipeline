pipeline {
    agent any

    environment {
        TRIVY_SERVER_NAME = "trivy-server"
        DOCKER_NETWORK = "jenkins"
        TRIVY_SERVER_PORT = "4954"
    }

    stages {
        stage('Start Trivy Server') {
            steps {
                script {
                    echo "Checking if Trivy server is already running..."
                    def isRunning = sh(script: "docker ps -q -f name=${TRIVY_SERVER_NAME}", returnStdout: true).trim()
                    
                    if (!isRunning) {
                        echo "Starting Trivy server..."
                        sh """
                        sudo docker stop ${TRIVY_SERVER_NAME} || true
                        sudo docker rm ${TRIVY_SERVER_NAME} || true
                        sudo docker run -d --name ${TRIVY_SERVER_NAME} --network ${DOCKER_NETWORK} \
                        -v /var/lib/trivy:/root/.cache/trivy \
                        -p ${TRIVY_SERVER_PORT}:${TRIVY_SERVER_PORT} \
                        aquasec/trivy server --listen 0.0.0.0:${TRIVY_SERVER_PORT}
                        """
                        sleep 10 // Warten, damit der Server startet
                    } else {
                        echo "Trivy server is already running!"
                    }
                    
                    // Prüfe die Trivy-Server-Verfügbarkeit
                    echo "Checking Trivy server health..."
                    sh "curl -s http://trivy-server:4954/healthz || (echo 'Trivy server health check failed!' && exit 1)"
                }
            }
        }
    }

    post {
        always {
            echo "Trivy Server Setup abgeschlossen!"
        }
        failure {
            echo "Fehler beim Starten des Trivy-Servers!"
        }
    }
}
